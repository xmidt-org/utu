# SPDX-FileCopyrightText: 2025 Comcast Cable Communications Management, LLC
# SPDX-License-Identifier: Apache-2.0
---
openapi: 3.0.4

components:
  jwk:
    type: object
    properties:
      kid:
        type: string
        description: the unique key identifier
        example: "keyidentifier"
      kty:
        type: string
        enum: [EC, RSA]
        description: the raw type of the key
      key_ops:
        type: array
        items:
          type: string
          enum: [sign, verify]
      use:
        type: string
        enum: [sig, enc]
  jwkset:
    type: object
    properties:
      keys:
        type: array
        description: the keys in the set
        items:
          $ref: "#/components/jwk"

info:
  title: utu
  description: a labweek JWT issuer
  version: 0.0.3

paths:
  /key:
    summary: returns the current verification key
    get:
      responses:
        "200":
          description: OK
          content:
            application/jwk+json:
              schema:
                $ref: "#/components/jwk"

  /key/{kid}:
    summary: returns an arbitrary verification key
    get:
      parameters:
        - name: kid
          in: path
          required: true
          schema:
            type: string
          example: "keyidentifier"

      responses:
        "200":
          description: OK
          content:
            application/jwk+json:
              schema:
                $ref: "#/components/jwk"

        "404":
          description: no such key
          content:
            text/plain:
              schema:
                type: string

  /keys:
    get:
      summary: returns all non-expired keys
      responses:
        "200":
          description: a JWK key set
          content:
            application/jwk-set+json:
              schema:
                $ref: "#/components/jwkset"

  /sign:
    put:
      summary: signs the content supplied to it
      requestBody:
        description: the content to sign (can by any kind of content)
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: "here is some text to sign"
          application/json:
            schema:
              type: object
              example: '{"foo": "bar"}'

      responses:
        "200":
          description: the initial content signed with the current key
          content:
            application/jose:
              schema:
                type: string
